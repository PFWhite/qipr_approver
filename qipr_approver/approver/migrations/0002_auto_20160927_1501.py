# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-09-27 15:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('approver', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Descriptor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('date_added', models.DateField(null=True)),
                ('major_revision_date', models.DateField(null=True)),
                ('ui', models.CharField(max_length=10)),
                ('cas_registry_number', models.CharField(max_length=40, null=True)),
                ('descriptor_class', models.CharField(max_length=1, null=True)),
                ('descriptor_entry_version', models.CharField(max_length=100, null=True)),
                ('descriptor_sort_version', models.CharField(max_length=300, null=True)),
                ('major_descriptor_date', models.DateField(null=True)),
                ('mesh_heading', models.CharField(max_length=150)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('pipe_separated', models.CharField(max_length=300, null=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeshTreeNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('descriptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesh_tree_number', to='approver.Descriptor')),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PharmacologicalAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Qualifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('date_added', models.DateField(null=True)),
                ('major_revision_date', models.DateField(null=True)),
                ('ui', models.CharField(max_length=10)),
                ('qualifier_established', models.CharField(max_length=25, null=True)),
                ('abbreviation', models.CharField(max_length=2)),
                ('sub_heading', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegistryNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SCR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('date_added', models.DateField(null=True)),
                ('major_revision_date', models.DateField(null=True)),
                ('ui', models.CharField(max_length=10)),
                ('cas_registry_number', models.CharField(max_length=40, null=True)),
                ('frequency', models.IntegerField(null=True)),
                ('note', models.TextField()),
                ('substance_name', models.CharField(max_length=300, null=True)),
                ('substance_name_term_thesaurus', models.CharField(max_length=40, null=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('heading_mapped_to', models.ManyToManyField(related_name='scr', to='approver.Descriptor')),
                ('indexing_information', models.ManyToManyField(related_name='scr_indexing', to='approver.Descriptor')),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pharmacological_action', models.ManyToManyField(to='approver.PharmacologicalAction')),
                ('related_registry_number', models.ManyToManyField(to='approver.RegistryNumber')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SemanticType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=50, null=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('pipe_separated', models.CharField(max_length=400, null=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='scr',
            name='semantic_type',
            field=models.ManyToManyField(to='approver.SemanticType'),
        ),
        migrations.AddField(
            model_name='scr',
            name='source',
            field=models.ManyToManyField(to='approver.Source'),
        ),
        migrations.AddField(
            model_name='scr',
            name='synonym',
            field=models.ManyToManyField(to='approver.Synonym'),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='allowable_qualifiers',
            field=models.ManyToManyField(related_name='_descriptor_allowable_qualifiers_+', to='approver.Qualifier'),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='created_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='entry',
            field=models.ManyToManyField(related_name='descriptor', to='approver.Entry'),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='forward_reference',
            field=models.ManyToManyField(related_name='_descriptor_forward_reference_+', to='approver.Descriptor'),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='last_modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='pharmacological_action',
            field=models.ManyToManyField(to='approver.PharmacologicalAction'),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='related_registry_number',
            field=models.ManyToManyField(to='approver.RegistryNumber'),
        ),
        migrations.AddField(
            model_name='descriptor',
            name='semantic_type',
            field=models.ManyToManyField(to='approver.SemanticType'),
        ),
    ]
